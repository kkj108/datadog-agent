syntax = "proto3";

package pb;

import "google/api/annotations.proto";

// The greeting service definition.
service Agent {
    // get the hostname
    rpc GetHostname (HostnameRequest) returns (HostnameReply) {
        option (google.api.http) = {
            get: "/v1/grpc/host"
        };
    }
}

service AgentSecure {
    rpc TaggerStreamEntities(StreamTagsRequest) returns (stream StreamTagsResponse) {
        option (google.api.http) = {
            post: "/v1/grpc/stream_tags"
            body: "*"
        };
    };
    rpc TaggerFetchEntity(FetchEntityRequest) returns (FetchEntityResponse) {
        option (google.api.http) = {
            post: "/v1/grpc/fetch_entity"
            body: "*"
        };
    };
}

message HostnameRequest {}

// The response message containing the requested hostname
message HostnameReply {
    string hostname = 1;
}

message StreamTagsRequest {
    TagCardinality cardinality = 1;
    Filter includeFilter = 2;
    Filter excludeFilter = 3;
}

message StreamTagsResponse {
    EventType type = 1;
    Entity entity = 2;
}

enum EventType {
    ADDED = 0;
    MODIFIED = 1;
    DELETED = 2;
}

enum TagCardinality {
    LOW = 0;
    ORCHESTRATOR = 1;
    HIGH = 2;
}

message Filter {
    string kubeNamespace = 1;
    string image = 2;
    string containerName = 3;
}

message Entity {
    EntityId id = 1;
    repeated string tags = 2;
}

message FetchEntityRequest {
    EntityId id = 1;
    TagCardinality cardinality = 2;
}

message FetchEntityResponse {
    Entity entity = 1;
}

message EntityId {
    string prefix = 1;
    string uid = 2;
}
